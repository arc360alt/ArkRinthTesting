name: ArkRinth Linux Build (AppImage + DEB + RPM)

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-22.04

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧰 Setup Node.js & pnpm
        uses: pnpm/action-setup@v4
        with:
          node-version-file: .nvmrc


      - name: 🧰 Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: x86_64-unknown-linux-gnu

      - name: 🧰 Setup Dasel
        uses: jaxxstorm/action-install-gh-release@v2.1.0
        with:
          repo: TomWright/dasel
          tag: v2.8.1
          extension-matching: disable
          rename-to: dasel
          chmod: 0755
          install-path: /usr/local/bin

      - name: 🧰 Install Linux build dependencies
        if: startsWith(matrix.platform, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -yq \
            libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev \
            libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev mesa-vulkan-drivers


      - name: ⚙️ Make Gradle executable
        run: chmod +x ./packages/app-lib/java/gradlew

      - name: 🏷️ Set application version
        run: |
          git fetch --tags --force
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.2.0")
          COMMIT_COUNT=$(git rev-list --count ${LATEST_TAG}..HEAD 2>/dev/null || echo "0")
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          CLEAN_TAG="${LATEST_TAG#v}"
          if [[ ! "$CLEAN_TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            if [[ "$CLEAN_TAG" =~ ^[0-9]+\.[0-9]+$ ]]; then
              CLEAN_TAG="${CLEAN_TAG}.0"
            else
              CLEAN_TAG="1.2.0"
            fi
          fi
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            APP_VERSION="$CLEAN_TAG"
          else
            APP_VERSION="${CLEAN_TAG}-canary.${COMMIT_COUNT}.${SHORT_SHA}"
          fi
          echo "Setting application version to $APP_VERSION"
          dasel put -f apps/app/Cargo.toml -t string -v "$APP_VERSION" 'package.version'
          dasel put -f packages/app-lib/Cargo.toml -t string -v "$APP_VERSION" 'package.version'
          dasel put -f apps/app-frontend/package.json -t string -v "$APP_VERSION" 'version'

      - name: 💨 Install dependencies
        run: pnpm install

      - name: 🔨 Build Linux app
        run: pnpm --filter=@modrinth/app run tauri build --release --config tauri-release.conf.json

      - name: 📤 Upload app bundles
        uses: actions/upload-artifact@v4
        with:
          name: ArkRinth Linux Bundles
          path: |
            target/release/bundle/appimage/ArkRinth_*.AppImage*
            target/release/bundle/deb/ArkRinth_*.deb*
            target/release/bundle/rpm/ArkRinth-*.rpm*
